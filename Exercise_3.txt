Exercise 1


import java.util.Scanner;

public class LogicOperators {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter x : ");
        float x = sc.nextFloat();
        System.out.print("Enter y : ");
        float y = sc.nextFloat();

        if ((x >= 0) && (y >= 0)) {
            System.out.println("Point is in I quadrant");
        } else if ((x < 0) && (y > 0)) {
            System.out.println("Point is in II quadrant");
        } else if ((x <= 0) && (y <= 0)) {
            System.out.println("Point is in III quadrant");
        } else {
            System.out.println("Point is in IV quadrant");
        }
    }
}
Exercise 2


public class OneDimensionalArray {
    public static void main(String[] args) {
        float[] tableC = {1.0f, 2.0f, 3.0f, 4.0f, 5.0f};

        for (int i = 0; i < tableC.length; ++i)
            System.out.println("tableC[" + i + "] = " + tableC[i]);

        for (float el : tableC)
            System.out.println("Element = " + el);
    }
}
Exercise 3


public class TwoDimensionalArray {
    public static void main(String[] args) {
        int n = 5;
        int[][] tab2D = new int[n][n];

        // Filling the matrix
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                tab2D[i][j] = i + j + 1;

        // Printing the matrix
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++)
                System.out.print(tab2D[i][j] + "\t");
            System.out.println();
        }

        // Setting zeros on diagonals
        for (int i = 0; i < n; i++) {
            tab2D[i][i] = 0;
            tab2D[i][n - i - 1] = 0;
        }

        System.out.println("\nMatrix with diagonals set to 0:");
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++)
                System.out.print(tab2D[i][j] + "\t");
            System.out.println();
        }
    }
}
Exercise 4


public class FormatExample {
    public static void main(String[] args) {
        int i = 9;
        double d0 = 45.33454d;
        double d1 = 123.234578d;
        double d2 = 3.232765d;
        String str = "abc";

        String result = String.format("i = %d ; d = %f ; str = %s", i, d0, str);
        String result2 = String.format("d0 =%8.2f\nd1 =%8.2f\nd2 =%8.2f", d0, d1, d2);

        System.out.println(result);
        System.out.println(result2);
    }
}
Exercise 5


public class CaesarCipher {
    public static void main(String[] args) {
        String alphabet = "ABCDEFGHIJKLMNOPRSTUWVXYZ ";
        String message = "MESSAGE TO CODE";
        String cipher = "";
        int key = 3;
        int tmp;

        // Encryption
        for (int i = 0; i < message.length(); i++) {
            tmp = alphabet.indexOf(message.charAt(i));
            tmp += key;
            tmp = tmp % alphabet.length();
            cipher += alphabet.charAt(tmp);
        }

        System.out.println("Encrypted: " + cipher);

        // Decryption
        String decrypted_message = "";
        for (int i = 0; i < cipher.length(); i++) {
            tmp = alphabet.indexOf(cipher.charAt(i));
            tmp -= key;
            tmp = (tmp + alphabet.length()) % alphabet.length();
            decrypted_message += alphabet.charAt(tmp);
        }

        System.out.println("Decrypted: " + decrypted_message);
    }
}
Exercise 6

public class CountDigits {
    public static void main(String[] args) {
        String passwd = "jdj8ns4k1ok";
        int count = 0;

        for (int i = 0; i < passwd.length(); i++) {
            if (Character.isDigit(passwd.charAt(i))) {
                count++;
            }
        }

        System.out.println("Number of digits: " + count);
    }
}
Exercise 7


public class PiMonteCarlo {
    public static void main(String[] args) {
        int total = 1000000;
        int insideCircle = 0;

        for (int i = 0; i < total; i++) {
            double x = Math.random();
            double y = Math.random();

            if (Math.sqrt(x * x + y * y) <= 1) {
                insideCircle++;
            }
        }

        double pi = (4.0 * insideCircle) / total;
        System.out.println("Estimated Ï€ = " + pi);
    }
}